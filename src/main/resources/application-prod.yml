spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test
    password: root
    username: root
    type: com.alibaba.druid.pool.DruidDataSource

    #druid配置<---
    #    Spring Boot 默认是不注入这些属性值的，需要自己绑定
    #      druid 数据源专有配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true

    #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
    #druid配置--->

#  devtools:
#    restart:
#      # 热部署开关，false即不启用热部署
#      enabled: false
#      # 指定热部署的目录
#      additional-paths: src/main/java
#      # 指定目录不更新
#      #exclude: test/**

#application:
#  name: staging
server:
  port: 8082



# 配置对象
yaml-object:
  name: gbs${random.uuid}
  #name: gbs${random.int}
  age: 22
  happy: true
  birth: 1998-08-25
  email: sss@foxmail.com
  maps: {k1: v1,k2: v2}
  #  lists:
  #    - code
  #    - music
  #    - girl
  lists: [code,music,girl]
  dog:
    # 如果yaml-object.name1 不存在则取后面的值
    name: ${yaml-object.name1:dognameisnull}
    age: 3

